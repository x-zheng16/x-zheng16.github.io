[{"content":"Quickly configure your VS Code installed in Host (a.k.a. local machine) to develop in Guest (i.e., remote machine, remote server, virtual machine in VirtualBox or Cloud).\nStep 1: Create a Virtual Machine (VM) Please refer to Install SEED VM on VirtualBox. Skip if you have one.\nusername: seed\npassword: dees\nThe following figure shows what NAT Network looks like. Please refer to VirtualBox Network Settings: Complete Guide or Virtual Networking if interested. Step 2: Set Up SSH Server Service in VM ## Install sshd server sudo apt install openssh-server ## Start server and check status sudo service ssh start sudo service ssh status ## Further config sshd server only when needed # sudo vim /etc/.ssh/sshd_config # sudo service ssh restart ## Verify ssh login # tip: use `whoami` to display your username ssh seed@127.0.0.1 Step 3: Add Port Forwarding Rule in VirtualBox Go to VirtualBox/Preferences/Network, edit your NATNetwork and select Port Forwarding. Add Rules as follows.\nName: SSH (any arbitrary unique name)\nProtocol: TCP\nHost IP: 127.0.0.1 (any available ip of your local machine)\nHost Port: 8022 (any unused port higher than 1024)\nGuest IP: 10.0.2.4 (type ifconfig in terminal of VM to check)\nGuest Port: 22 (SSH default port)\nStep 4: Set Up SSH Client Service in Host Install ssh client For macOS Host, it comes pre-installed. For Ubuntu Host, Debian/Ubuntu Run sudo apt-get install openssh-client. For other OS, please refer to Install a supported SSH client.\nConnect VM by SSH ssh seed@127.0.0.1 -p 8022 Set up password-free login (Optional) Do the following substeps in your local machine if you want password-free login.\n# Lists the files in your .ssh directory, if they exist ll ~/.ssh # Generate a new key if needed with RSA 2048⁄4096 or Ed25519 # Just don’t use ECDSA/DSA! ssh-keygen -t ed25519 # Start the ssh-agent in the background eval \u0026#34;$(ssh-agent -s)\u0026#34; # Add your SSH private key to the ssh-agent ssh-add ~/.ssh/id_ed25519 # Copy public key to VM ssh-copy-id seed@127.0.0.1 -p 8022 # Now try again to log in with no password required ssh seed@127.0.0.1 -p 8022 Please refer to How to Set Up SSH Keys on Ubuntu 20.04 or Connecting to GitHub with SSH for more info.\nIf you want further simplify the connection, open ~/.ssh/config in your local machine and append the following ssh config.\nHost sd HostName 127.0.0.1 User seed # replace id_ed25519 with your secret key IdentityFile ~/.ssh/id_ed25519 Port 8022 Now try to login by\nssh sd Step 5: Install VSCode and Remote SSH Extension Install VSCode in your local machine and install Remote - SSH extension in VSCode, and click the bottom left \u0026gt;\u0026lt; icon to use it. All the extensions I prefer are listed below.\nRemote\nRemote - SSH\nRemote - SSH: Editing Configuration Files\nHex\nHex Editor (or hexdump for VSCode)\n","permalink":"https://x-zheng16.github.io/posts/ssh_vm/","summary":"Quickly configure your VS Code installed in Host (a.k.a. local machine) to develop in Guest (i.e., remote machine, remote server, virtual machine in VirtualBox or Cloud).\nStep 1: Create a Virtual Machine (VM) Please refer to Install SEED VM on VirtualBox. Skip if you have one.\nusername: seed\npassword: dees\nThe following figure shows what NAT Network looks like. Please refer to VirtualBox Network Settings: Complete Guide or Virtual Networking if interested.","title":"Tutorial for CS5293 - Quickly Configure VS Code to Develop in Remote Machine"}]